#
# Masters
#

{% set t_master_count = master_node_group.instance_count | default(1) %}

data "google_compute_subnetwork" "{{ cluster_subnetwork_name }}" {
  name   = "{{ cluster_subnetwork_name }}"
  project = "{{ openshift_gcp_network_project }}"
}

data "google_service_account" "{{ master_service_account }}" {
  account_id = "{{ master_service_account }}"
}

{# Spread masters between available zones #}
{% for n in range(t_master_count|int) %}
{%   set t_master_name = openshift_gcp_prefix ~ 'master-' ~ n %}
{%   set t_master_zone = gcp_zones[ n % gcp_zones|length ] %}

resource "google_compute_disk" "{{ t_master_name }}-docker-vg" {
  name = "{{ t_master_name }}-docker-vg"
  project = "{{ openshift_gcp_project }}"
  type = "{{ master_docker_vg_disk_type }}"
  size = "{{ master_docker_vg_disk_size_gb }}"
  zone = "{{ t_master_zone }}"
}

resource "google_compute_instance" "{{ t_master_name }}" {
  name = "{{ t_master_name }}"
  machine_type = "{{ master_machine_type }}"
  project = "{{ openshift_gcp_project }}"
  zone = "{{ t_master_zone }}"

  tags = ["{{ openshift_gcp_prefix }}node", "{{ openshift_gcp_prefix }}node-master"]

  boot_disk {
    initialize_params {
      image = "{{ master_boot_disk_image }}"
      size = "{{ master_boot_disk_size_gb }}"
      type = "{{ master_boot_disk_type }}"
    }
  }

  attached_disk {
    source = "${google_compute_disk.{{ t_master_name }}-docker-vg.self_link}"
    device_name = "docker-vg"
  }

  network_interface {
    subnetwork = "${data.google_compute_subnetwork.{{ cluster_subnetwork_name }}.self_link}"
    subnetwork_project = "{{ openshift_gcp_project }}"
    access_config {
      // Ephemeral IP
    }
  }

  labels = {
    openshift-cluster = "{{ cluster_name }}"
    openshift-node-group-name = "master"
  }

  metadata {
    ansible-host-group-masters = "true"
    ansible-host-group-nodes = "true"
{% if cluster_ansible_ssh_pubkey %}
    sshKeys = "{{ cluster_ansible_user }}:{{ cluster_ansible_ssh_pubkey }} {{ cluster_ansible_user }}"
{% endif %}
  }

  service_account {
    email = "${data.google_service_account.{{ master_service_account }}.email}"
    scopes = ["cloud-platform"]
  }
}
{% endfor %}

resource "google_compute_health_check" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
  timeout_sec = 10
  check_interval_sec = 10

  https_health_check {
    port = "443"
    request_path = "/healthz"
  }
}

# A master instance group for each zone which has master instances.
# Instance groups are named with the same suffix as zone name ("-a", "-b", etc)
{% for n in range(t_master_count|int) %}
{%   if n < gcp_zones|length %}
{%     set t_master_zone = gcp_zones[n] %}
{%     set t_master_instance_group = openshift_gcp_prefix ~ 'master' ~ t_master_zone[-2:] %}
resource "google_compute_instance_group" "{{ t_master_instance_group }}" {
  name = "{{ t_master_instance_group }}"
  zone = "{{ t_master_zone }}"
  instances = [
{%     for i in range(t_master_count|int) %}
{%       if n == i % gcp_zones|length %}
    "${google_compute_instance.{{ openshift_gcp_prefix }}master-{{ i }}.self_link}",
{%       endif %}
{%     endfor %}
  ]
  named_port {
    name = "https"
    port = "443"
  }
}
{%   endif %}
{% endfor %}

resource "google_compute_region_backend_service" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
  protocol = "TCP"
  region = "{{ openshift_gcp_region }}"
  session_affinity = "NONE"
  timeout_sec = 30

{% for n in range(t_master_count|int) %}
{%   if n < gcp_zones|length %}
{%     set t_master_zone = gcp_zones[n] %}
{%     set t_master_instance_group = openshift_gcp_prefix ~ 'master' ~ t_master_zone[-2:] %}
  backend {
    group = "${google_compute_instance_group.{{ t_master_instance_group }}.self_link}"
  }
{%   endif %}
{% endfor %}

  health_checks = [
    "${google_compute_health_check.{{ openshift_gcp_prefix }}master.self_link}"
  ]
}

resource "google_compute_backend_service" "{{ openshift_gcp_prefix }}master-https" {
  name = "{{ openshift_gcp_prefix }}master-https"
  port_name   = "https"
  protocol = "HTTPS"
  session_affinity = "NONE"
  timeout_sec = 30

{% for n in range(t_master_count|int) %}
{%   if n < gcp_zones|length %}
{%     set t_master_zone = gcp_zones[n] %}
{%     set t_master_instance_group = openshift_gcp_prefix ~ 'master' ~ t_master_zone[-2:] %}
  backend {
    group = "${google_compute_instance_group.{{ t_master_instance_group }}.self_link}"
    balancing_mode = "RATE"
    max_rate_per_instance = "100"
  }
{%   endif %}
{% endfor %}

  health_checks = [
    "${google_compute_health_check.{{ openshift_gcp_prefix }}master.self_link}"
  ]
}

resource "google_compute_forwarding_rule" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
  backend_service = "${google_compute_region_backend_service.{{ openshift_gcp_prefix }}master.self_link}"
  load_balancing_scheme = "INTERNAL"
  ports = [443]
  subnetwork = "${data.google_compute_subnetwork.{{ cluster_subnetwork_name }}.self_link}"
}

{% if use_cloud_dns %}
data "google_dns_managed_zone" "{{ cluster_dns_zone_name }}" {
  name = "{{ cluster_dns_zone_name }}"
}

resource "google_dns_record_set" "{{ openshift_gcp_prefix }}master-internal" {
  name = "{{ openshift_master_cluster_hostname }}."
  type = "A"
  ttl  = 300
  managed_zone = "${data.google_dns_managed_zone.{{ cluster_dns_zone_name }}.name}"
  rrdatas = ["${google_compute_forwarding_rule.{{ openshift_gcp_prefix }}master.ip_address}"]
}
{% endif %}

output "master_ip_internal" {
  value = "${google_compute_forwarding_rule.{{ openshift_gcp_prefix }}master.ip_address}"
}

