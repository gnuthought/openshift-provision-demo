---
- when: >-
    'image' in group_names
  block:
  - name: Stop {{ node_service }} service
    service:
      name: "{{ node_service }}"
      state: stopped

  - name: Reset node bootstrap
    file:
      state: absent
      path: "{{ item }}"
    with_items:
    - /etc/origin/node/certificates
    - /etc/origin/node/node.kubeconfig

  - name: Create {{ node_service }}-bootstrap-conf service
    copy:
      dest: /etc/systemd/system/{{  node_service }}-bootstrap-conf.service
      content: |
        [Unit]
        Description=OpenShift Node Bootstrap Configuration
        Before={{ node_service }}
        Wants=dnsmasq.service
        After=dnsmasq.service

        [Service]
        ExecStart=/usr/local/bin/{{ node_service }}-bootstrap-conf
        Type=oneshot

        [Install]
        WantedBy=multi-user.target

  - name: Add boostrap conf systemd requires to {{ node_service }} service
    lineinfile:
      path: /etc/systemd/system/{{ node_service }}.service
      line: Requires={{ node_service }}-bootstrap-conf.service
      insertafter: '^\[Unit\]'

  - name: Create /usr/local/bin/{{ node_service }}-bootstrap-conf
    template:
      src: "{{ demo_cloud_provider }}-node-bootstrap-conf.py.j2"
      dest: /usr/local/bin/{{ node_service }}-bootstrap-conf
      mode: u=rwx,go=rx

  - name: Enable {{ node_service }}-bootstrap-conf service
    systemd:
      daemon_reload: true
      enabled: true
      name: "{{ node_service }}-bootstrap-conf"

- name: Create cluster disk image
  delegate_to: localhost
  command: ../hosts.py --create-node-image
